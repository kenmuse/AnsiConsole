# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json

name: "Release - Publish"
on:
  release:
    types: [published]

jobs:
  sign:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3

      - name: Sign code
        shell: pwsh
        run: |
          . ./build/Sign-Module.ps1
          $pswd = (ConvertTo-SecureString $env:PSWD -AsPlainText -Force)
          $result = Add-CodeSigning -PfxContent $env:CERT -CertificatePassword $pswd -SourceCodePath ./src
          '```' | Add-Content $env:GITHUB_STEP_SUMMARY
          $result | Add-Content $env:GITHUB_STEP_SUMMARY
          '```' | Add-Content $env:GITHUB_STEP_SUMMARY
          $result
        env:
          PSWD: ${{ secrets.CODESIGN_PWD }}
          CERT: ${{ secrets.CODESIGN_PFX }}

      - name: Upload signed module and tests
        uses: actions/upload-artifact@v3.1.0
        with:
          name: Package
          path: |
            ./src
            ./test
          if-no-files-found: error

      - name: Upload signed module
        uses: actions/upload-artifact@v3.1.0
        with:
          name: ${{ github.event.repository.name }}
          path: ./src/
          if-no-files-found: error

  test-windows:
    runs-on: windows-latest
    needs: sign
    steps:
      - name: Download module
        uses: actions/download-artifact@v3.0.0
        with:
          # Artifact name
          name: Package
          path: .

      - name: Perform a Pester test
        shell: pwsh
        run: |
          Invoke-Pester ./tests -Passthru

      - name: Run PSScriptAnalyzer
        uses: microsoft/psscriptanalyzer-action@v1.0
        with:
         path: .
         recurse: true
         output: results.sarif

      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v2
        with:
          # Path to SARIF file relative to the root of the repository
          sarif_file: results.sarif
          # Optional category for the results
          # Used to differentiate multiple results for one commit
          category: windows

  test-linux:
    runs-on: ubuntu-latest
    needs: sign
    steps:
      - name: Download module
        uses: actions/download-artifact@v3.0.0
        with:
          # Artifact name
          name: Package
          path: .

      - name: Perform a Pester test
        shell: pwsh
        run: |
          Invoke-Pester ./tests -Passthru

      - name: Run PSScriptAnalyzer
        uses: microsoft/psscriptanalyzer-action@v1.0
        with:
         path: .
         recurse: true
         output: results.sarif

      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v2
        with:
          # Path to SARIF file relative to the root of the repository
          sarif_file: results.sarif
          # Optional category for the results
          # Used to differentiate multiple results for one commit
          category: linux

  test-macos:
    runs-on: macos-latest
    needs: sign
    steps:
      - name: Download module
        uses: actions/download-artifact@v3.0.0
        with:
          # Artifact name
          name: Package
          path: .

      - name: Perform a Pester test
        shell: pwsh
        run: |
          Invoke-Pester ./tests -Passthru

      - name: Run PSScriptAnalyzer
        uses: microsoft/psscriptanalyzer-action@v1.0
        with:
         path: .
         recurse: true
         output: results.sarif

      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v2
        with:
          # Path to SARIF file relative to the root of the repository
          sarif_file: results.sarif
          # Optional category for the results
          # Used to differentiate multiple results for one commit
          category: macos
  publish:
    needs:
      - test-windows
      - test-linux
      - test-macos
    runs-on: ubuntu-latest
    environment: PSGallery
    steps:
      - name: Download module
        uses: actions/download-artifact@v3.0.0
        with:
         name: ${{ github.event.repository.name }}
         path: ./src
      - name: List details
        run: ls -l -a
      - name: Publish
        if: ${{ false }}
        env:
          NUGET_KEY: ${{ secrets.PSGALLERY_API }}
        shell: pwsh
        run: Publish-Module -Path ./src -NuGetApiKey $env:NUGET_KEY -Verbose
