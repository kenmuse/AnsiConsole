# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

permissions:
  security-events: write
  actions: read
  contents: read

jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      
      - name: Sign code
        shell: pwsh
        run: |
          . ./Sign-Module.ps1
          $pwd = (ConvertTo-SecureString $env:PWD -AsPlainText -Force)
          Add-CodeSigning -PfxContent $env:CERT -CertificatePassword $pwd -SourceCodePath ./src
        env:
          PWD: ${{ secrets.CODESIGN_PWD }}
          CERT: ${{ secrets.CODESIGN_PFX }}
      
      - name: Perform a Pester test
        shell: pwsh
        run: |
          Invoke-Pester ./tests -Passthru
          
      - name: Run PSScriptAnalyzer
        uses: microsoft/psscriptanalyzer-action@v1.0
        with:
         path: .
         recurse: true 
         output: results.sarif
         
      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v2
        with:
          # Path to SARIF file relative to the root of the repository
          sarif_file: results.sarif
          # Optional category for the results
          # Used to differentiate multiple results for one commit
          category: PSScriptAnalyzer
          
      - name: Update Repository
        if: ${{ false }}
        run: |
          git config --global user.name 'kenmuse'
          git config --global user.email 'kenmuse@users.noreply.github.com'
          git add .
          git commit -am "Pushing updated module"
          git push    
          
      - name: Build and publish
        if: ${{ false }}
        env:
          NUGET_KEY: ${{ secrets.NUGET_KEY }}
        shell: pwsh
        run: |
          ./build.ps1 -Path /.src/
          Publish-Module -Path ./src -NuGetApiKey $env:NUGET_KEY -Verbose
